name: Tag package

on:
   pull_request:
     types:
       - closed
     branches:
       - main

jobs:
  tag:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GIT_PAT }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}
      - name: Install dependencies
        run: pip install -U pip setuptools wheel pre-commit bumpver -r requirements.dev.txt -e .
      - name: pre-commit
        run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: ${{ env.pythonLocation }}
      - name: Lint
        run: flake8
      - name: Type checking
        run: mypy frozendict tests
      - name: Test with pytest
        run: pytest
      - name: push new tag
        run: |
          # Git config
          git config user.name "GitHub Actions"
          git config user.email "scott.tiger@ominatechnologies.com"
          git pull -r -n

          # Tag and its message
          bumpver update -n
          tag=$(git show -s --format=%s | cut -c 16-)
          changes=$(sed -n '/^++++$/,/^++++++++/p' CHANGELOG.rst | sed '1d;$d' | sed '$d')
          message=$(echo -e "\n$changes")

          # Finalize changelog
          sed -i "s/^++++$/++++\n\n$tag\n$(printf '+%.0s' $(seq 2 $(echo $tag | wc -c | tr -d ' ')))/" CHANGELOG.rst

          # Commit changes
          git add CHANGELOG.rst
          git commit --amend --no-edit

          # Tag the commit
          git tag -a "$tag" -m "$message"

          # Push commit and tag
          git push --atomic origin main "$tag"
