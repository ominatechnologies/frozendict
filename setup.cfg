[metadata]
name = frozendict
version = 2022.4.4.1
description = A modern implementation of FrozenDict.
author = Omina Technologies
author_email = info@ominatechnologies.com
description_file = file: README.rst
long_description = file: README.rst
long_description_content_type = text/reStructuredText
license = MIT
license_file = LICENSE
url = https://github.com/ominatechnologies/frozendict
classifiers =
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
keywords =
    immutable
    python
    type system

[options]
zip_safe = false
package_dir =
    =src
packages = find:
python_requires = >= 3.8.0
setup_requires =
    setuptools >= 46.4.0
    wheel >= 0.36.0
include_package_data = true

[options.packages.find]
where = src

[options.package_data]
frozendict =
    py.typed

[options.data_files]
frozendict =
    AUTHORS.rst
    CHANGELOG.rst
    LICENSE
    README.rst

[bdist_wheel]
universal = true

[flake8]
known-modules = frozendict
exclude =
    .git
    .eggs
    .*_cache
    *.egg-info
    venv
    build
    dist
    docs
inline-quotes = double
max-line-length = 88
extend-ignore = E203
# mccabe config
max-complexity = 15
# flake8-docstrings config
docstring-convention = google
# rules
select =
    # mccabe
    C9,
    # pycodestyle
    E,W,
    # pyflakes
    F,
    # flake8-bugbear
    B,B9,
    # flake8-comprehensions
    C4,
    # flake8-docstrings
    D,
    # flake8-requirements
    I,
    # pep8-naming
    N,
ignore =
    # pycodestyle (overlaps with B904)
    E722,
    # pycodestyle (for black)
    E203,W503,
    # pyflakes (allow star imports)
    F403,F405,
    # flake8-bugbear (overlaps with E501)
    B950,
    # flake8-comprehensions (allow dict() calls)
    C408,
    # pydocstyle
    # (allow __init__ without docstring)
    D107,
    # (allow first line of docstring to wrap)
    D415,
    # pep8-naming (overlaps with B902)
    D404,D405,
    # others
    SIM106,
per-file-ignores = test_*.py:I900

[isort]
profile = black

[mypy]
python_version = 3.8
# Don't warn when an import cannot be resolved
ignore_missing_imports = True
# Check the body of every function, regardless of
# whether it has type annotations
check_untyped_defs = True
# Warn about casts that do nothing
warn_redundant_casts = True
# Warn about "type: ignore" comments that do nothing
warn_unused_ignores = True
# Warn when a function is missing return statements in
# some execution paths
warn_no_return = True
# Warn about code determined to be unreachable or
# redundant after performing type analysis
warn_unreachable = True
# Allow variables to be redefined with a different type
allow_redefinition = True
# Prefixes each error with the relevant context
show_error_context = True
# Shows error codes in error messages, so you can use
# specific ignore comments
# i.e., "type: ignore[code]"
show_error_codes = True
# Use visually nicer output in error messages
pretty = True
# others
allow_untyped_globals = False
color_output = True
error_summary = True
show_absolute_path = True
show_column_numbers = True
show_none_errors = True
show_traceback = True
verbosity = 0

[tool:pytest]
addopts =
    -ra -s
    --color=yes
    --doctest-modules
    --failed-first
    --new-first
    --verbosity=1
junit_family = xunit1
norecursedirs =
    .mypy_cache
    .tox
    *.egg
    *.venv
    docs
python_files = test_*.py
testpaths =
    ./src
    ./tests

[pytest-watch]
addopts =
    -ra -s
    --color=yes
    --doctest-modules
    --failed-first
    --maxfail=1
    --new-first
    --verbosity=1
;    --showlocals
; The extensions should be listed on one line!
ext = .csv,.jinja2,.json,.py,.yaml,.yml
watchpaths =
    ./src
    ./tests

[bumpver]
current_version = 2022.4.4.1
version_pattern = YYYY.MM.DD[.INC0]
commit_message = chore: Release {new_version}
commit = True
tag = False
push = False

[bumpver:file_patterns]
setup.cfg =
    current_version = {version}
    version = {version}
config.py =
    release = "{version}"
