[tox]
envlist = bandit, flake8, py38, pylint, pypy3
skipsdist = true

[testenv]
description = Unit tests
deps =
    -rrequirements.txt
commands = pytest {posargs}
depends =
    {py38}: clean
    report: py38

[testenv:clean]
description = Remove Python bytecode and other debris
deps =
    pyclean
    coverage
skip_install = true
commands =
    py3clean {toxinidir}
    coverage erase
    rm -rf .cache/ .pytest_cache/ .tox/ tests/reports/ /tmp/painless-generated-projects
whitelist_externals =
    rm

[testenv:flake8]
description = Static code analysis and code style
deps = flake8
commands = flake8 {posargs}

[testenv:pylint]
description = Check for errors and code smells
deps =
    {[testenv]deps}
    pylint
commands =
    pylint --rcfile tox.ini {posargs}

[testenv:bandit]
description = PyCQA security linter
deps = bandit<1.6.0
commands = bandit -r --ini tox.ini

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[bandit]
exclude = .cache,.git,.tox,build,dist,docs,tests,./*/_/frameworks/
targets = .

[flake8]
exclude = .cache,.git,.tox,build,dist,docs,./*/_/frameworks/

[pylint]
[MASTER]
disable = duplicate-code
min-similarity-lines = 5
output-format = colorized

[pytest]
addopts =
    --color=yes
    --cov
    --cov-append
    --cov-report=term-missing
    --doctest-modules
    --ignore=tests/acceptance/steps
    --junitxml=tests/reports/unittests.xml
    --strict
    --verbose
    tests
